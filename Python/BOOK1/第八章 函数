▶定义函数
--使用【def】关键字定义一个函数
  *定义结构为
   def founction()：
       f(x)
       
--函数表达的信息即为f(x)
  
--实参和形参
  *python中每个实参都必须管理函数中定义的一个形参。举个例子来说明什么是形参和实参：
   def founction(x):
       f(x)
   f(n)
  *在这个例子中，在定义函数时使用的【参数x】是个形参，后续函数运行时使用的【参数n】是个实参。
   简单理解就是，定义函数时定义了一个参数【模板】，也就是形式上的参数，叫【形参】；在后续函数运行时赋予的参数，实际使用的参数叫做【实参】。

▶传递实参
 传递实参的方式有很多，比如【位置实参】和【关键字实参】

--位置实参
  *基于实参的位置和形参进行关联的方式叫做【位置实参】
  *举个例子：
   def function(x,y,z):
      f(x,y,z)
   function(m,n,p)
   在这个例子中，形参x对应的是实参m，形参y对应的是实参n，形参z对应的是实参p。像这种按照位置进行关联的方式叫做位置参数。具体例子见【8test.py-8.2.1】
  *根据需要可以多次调用函数
   接上面的例子，我们还可以第二次调用function()
   function(s,p,t)
   具体例子见【8test.py-8.2.1】
   
--关键字实参
  *将值直接传递给函数中设置的形参，如此设置实参时的顺序就无关紧要了
  *参考上面的例子，在调用function()时就变为：
   function(x = s,y = p,z = t)
   具体例子见【8test.py-8.2.2】
   
--默认值
  *在编写函数时可以给形参设定默认值。若后续指定了实参，函数就使用指定的实参，否则将使用默认值
  *使用默认值时需要在【形参列表】中先列出没有默认值的形参，在列出有默认值的形参，这样程序才能正确运行
  *默认值在设置形参时同时设定，如function(x,z,y=s)中就直接将y的默认值设为了s。
   具体例子见【8test.py-8.2.3】
--避免实参出现错误
  *当提供的实参多余或少于形参的个数时，将会出现实参不匹配的错误。
  
▶返回值
--使用关键字return来获取函数的返回值
  *具体例子见【8test.py-8.3.1】

--将实参变为可选的
  *即：将是否提供某个实参变为可选项
  *使用设置默认值和if语句实现
   具体例子见【8test.py-8.3.2】

--返回字典
  *函数的返回值可以是任何类型，包括列表、字典等较为复杂的数据结构
  *具体例子见【8test.py-8.3.3】
  
--结合使用函数好while循环
  *具体例子见【8test.py-8.3.4】
  
▶传递列表
--在函数中修改列表
  *
